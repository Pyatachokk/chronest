:py:mod:`chronest.univariate.models.naive`
==========================================

.. py:module:: chronest.univariate.models.naive


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   chronest.univariate.models.naive.Naive




.. py:class:: Naive(delta: pandas.DateOffset, seasonal_period: int = 1)


   Bases: :py:obj:`chronest.univariate.models.base.BaseModel`

   A naive forecasting model that simply repeats the last observed values.

   The model supports seasonality, allowing for the repetition of the last
   `seasonal_period` observed values in a cyclic manner.

   Attributes:
       _delta (pd.DateOffset): The time delta between consecutive forecasts.

       _seasonal_period (int): The number of periods to consider for the seasonality pattern.

       _y (pd.Series): The series of observed values used to fit the model.

       _origin (pd.Timestamp): The timestamp of the last observed value.

       _y_tail (pd.Series): The tail of the series, containing the last `seasonal_period` observations.

   .. py:method:: fit(y: pandas.Series)

      Fits the Naive model to the provided series.

      This method prepares the model for forecasting by storing the last
      `seasonal_period` observations and setting up the model's origin.

      Args:
          y (pd.Series): The series of observed values.


   .. py:method:: __is_fitted()

      Checks if the model is fitted.

      Ensures that the model has been fitted with data before forecasting.



   .. py:method:: predict(horizon: int = 1) -> pandas.Series

      Generates forecasts for the specified horizon.

      The forecasts are generated by cyclically repeating the last `seasonal_period`
      observations for the number of periods specified by `horizon`.

      Args:
          horizon (int): The number of periods into the future to forecast.

      Returns:
          pd.Series: A series of forecasted values, indexed by the forecast dates.




